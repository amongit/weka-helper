The goal of services -- be they RESTful, SOAP, web, cloud, data, and anything else -- is to break out vital pieces of the monolithic applications or systems that take up data center space. They are intended to both lighten and enlighten IT environments, abstracting away the heavy-duty plumbing and infrastructures that are in the systems underneath. For example, a large monolithic system built on Ruby may be too unwieldy, and better off broken down into services that can be accessed and reused as the business changes.
What happens when the service becomes a monolith in itself? What if it becomes difficult to make changes without having to ensure that all upstream and downstream dependencies are not broken, and that its myriad of consumers do not get cut off?